@charset "utf-8";

@import "color_variables";
@import "font_variables";

/* ****

  Button UI Element Cascading Styles

  zindex level ... 6000

   **** */

// Button
@mixin buttonStyle () {
  position:relative;
  display: inline-block;
  border-radius: 2px;
  font-size:$normalFontSize;
  padding:0.5rem 1rem;
  outline:none;
  text-decoration:none;
  transition-property: all;
  transition-duration: 0.2s;
  transition-timing-function: linear;
}

// Button __ blue line to gold bg
.button-blueline {
  @include buttonStyle();
  border:solid 1px $ruri;
  color:$ruri;
  cursor: pointer;
}
  .button-blueline::before {
    position:absolute;
    top:0;
    right:0;
    bottom:0;
    left:0;
    content:" ";
    background-color:transparent;
    z-index:-1;

    transform-origin: center center;
    transform: scale(0, 1);
    transition: transform .3s;
  }
  .button-blueline:hover {
    border-color:$kon;
    color:$kon;
  }
  .button-blueline:hover::before {
    transform: scale(1, 1);
    background-color:$sirocha_transparent;
  }


// Button __ gold line
.button-goldline {
  @include buttonStyle();
  background-color: transparent;
  border:solid 1px $sirocha;
  border-radius: 2px;
  color:$sironeri;
  cursor:pointer;
}
  .button-goldline::after {
    position:absolute;
    top:0;
    right:0;
    bottom:0;
    left:0;
    content:" ";
    background-color:transparent;
    z-index:-1;

    transform-origin: center center;
    transform: scale(0, 1);
    transition: transform .3s;
  }

  .button-goldline:hover {
    border-color:$sironeri;
    color:$sironeri;
  }

  .button-goldline:hover::after {
    transform: scale(1, 1);
    background-color:$sirocha;
  }


  /* *********
     *********
   Link Element Movement cascading
     *********
     ********* */

  /* $bordersize : default border size  */
  @mixin linkCascadeUnderLine ($bordersize,$tranDuration) {
    position:relative;
    border-bottom:solid $bordersize transparent;
  /*    transition-property: all;
      transition-duration: $tranDuration;
      transition-timing-function: ease-out;
  */}
  @mixin linkCascadeUnderLinePseudoClassAfter ($bordersize,$tranDuration) {
    position:absolute;
    bottom:-2px;
    //right:0;
    left:0;
    content:" ";
    width:0;
    height:0;
    border-bottom:solid $bordersize transparent;
      transition-property: all;
      transition-duration: $tranDuration;
      transition-timing-function: ease-out;
  }
  // standard
  .mv_sirochaUnderLine {
   @include linkCascadeUnderLine( 2px, 0.3s );
  }
  .mv_sirochaUnderLine::after {
   @include linkCascadeUnderLinePseudoClassAfter ( 2px, 0.3s);
  }
  .mv_sirochaUnderLine:hover::after {
   width:100%;
   border-bottom-color:$sirocha;
  }
  // thin line
  .mv_sirochaThinUnderLine {
   @include linkCascadeUnderLine( 1px, 0.3s );
  }
  .mv_sirochaThinUnderLine::after {
   @include linkCascadeUnderLinePseudoClassAfter ( 1px, 0.3s);
  }
  .mv_sirochaThinUnderLine:hover::after {
   width:100%;
   border-bottom-color:$sirocha;
  }

  // ----------------------------------------------
  // Link underline with arrow object
  // need wrapper element. this link width is 100%.
  @mixin underarrow() {
    display:inline-block;
    position:relative;
    width:100%;
    cursor:pointer;
    text-indent:50%;
    text-decoration:none;
      transition-property: all;
      transition-duration: .3s;
      transition-timing-function: ease-out;
      //width:auto;
      //padding-right:2rem;
      //text-align:left;
      // text-align:right;
  }
    @mixin underarrowBorder() {
      position:absolute;
      top:0;
      left:0;
      width:35%;
      height:100%;
      //color:transparent;
      content:" ";
        transition-property: all;
        transition-duration: .3s;
        //transition-timing-function: ease-out;
        transition-timing-function: cubic-bezier(0, 0.32, 0.18, 0.74);
    }
    @mixin underTriangle() {
      position:absolute;
      bottom:0;
      left:35%;
      content:" ";
      border-right: 0.7rem solid transparent;
        transition-property: all;
        transition-duration: .3s;
        //transition-timing-function: ease-out;
        transition-timing-function: cubic-bezier(0, 0.32, 0.18, 0.74);
    }

  // *************
  // White version
  .mv_underarrow-white {
    @include underarrow();
    color:$sironeri;
  }
    // underline
    .mv_underarrow-white::before {
      @include underarrowBorder();
      border-bottom:solid 1px $sironeri;

    }
    // arrow triangle
    .mv_underarrow-white::after {
      @include underTriangle();
      border-bottom: 0.5rem solid $sironeri;
    }
/*    .mv_underarrow-white:hover {
      border-bottom:solid 1px $sironeri;
      text-indent:60%;
    }*/
    .mv_underarrow-white:hover::before {
      width:44%;
      border-bottom-color: $sirocha;
    }
    .mv_underarrow-white:hover::after {
      left:44%;
      //right:-100%;
      border-bottom-color: $sirocha;
    }

  // *************
  // Navy version
  .mv_underarrow-navy {
    @include underarrow();
    color:$kon;
  }
    // underline
    .mv_underarrow-navy::before {
      @include underarrowBorder();
      border-bottom:solid 1px $kon;

    }
    // arrow triangle
    .mv_underarrow-navy::after {
      @include underTriangle();
      border-bottom: 0.5rem solid $kon;
    }
    .mv_underarrow-navy:hover::before {
      width:44%;
    }
    .mv_underarrow-navy:hover::after {
      left:44%;
    }
